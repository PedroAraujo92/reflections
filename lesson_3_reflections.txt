When would you want to use a remote repository rather than keeping all your work local?
  
  I'll use a remote repository when I want someone to colaborate with the project adding new features,
  or to work on a project with a team where each indivual has your own duty to achieve the same goal (the end of the project).

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

  Because sometimes I may have changes on my remote repository that I'm not ready to overwrite with updates.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
	Forks are used when you want to change something on someone's project but you don't have his/her permission to do it, however, his/her project is posted on GitHub, so you would be able to change whatever you want without changing that person project.

	Clones are used to clone a respository. It can be used to clone a repository locally or to clone a repository from GitHub.

	Branches are used to add changes to a project without changing the master branch. It is used to try something out without breaking functional stuff.

What is the benefit of having a copy of the last known state of the remote stored locally?
	
	The benefit of having a copy of the last known state of the remote stored locally is to able to track all changes made and the possibility of working offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	
	Without those tools I think I would collaborate using another versioning tool and posting my code on another blog or website or develop a blog to post it. The hardest thing about it is learn how to deal with another versioning tools and develop a blog just for posting codes.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	
	When I think that my work might conflicts with anothers or when I need someone's approval for my changes. The benefits about working on branches are the fact that all changes made will not trouble someone else's work.

Commands:

git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch